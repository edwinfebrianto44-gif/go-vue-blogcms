# Server Configuration
SERVER_HOST=localhost
SERVER_PORT=8080
APP_ENV=development
APP_DEBUG=true

# Database Configuration (Individual components)
DB_HOST=localhost
DB_PORT=3306
DB_USER=bloguser
DB_PASSWORD=blogpassword
DB_NAME=blogcms

# Legacy Database URL (for backward compatibility)
DATABASE_URL=mysql://bloguser:blogpassword@localhost:3306/blogcms?charset=utf8mb4&parseTime=True&loc=Local

# JWT Configuration
JWT_SECRET=your-super-secret-jwt-key-here-change-in-production-make-it-very-long-and-complex
JWT_EXPIRE_HOURS=24

# Storage Configuration
STORAGE_DRIVER=local
# Options: local, s3

# Local Storage Settings
UPLOAD_DIR=./storage/uploads
BASE_URL=http://localhost:8080
STORAGE_MAX_FILE_SIZE=5242880
# 5242880 bytes = 5MB

# S3/MinIO Settings (when STORAGE_DRIVER=s3)
S3_ENDPOINT=http://localhost:9000
# Leave empty for AWS S3, set for MinIO/compatible services

AWS_REGION=us-east-1
S3_BUCKET_NAME=blog-uploads
AWS_ACCESS_KEY_ID=minioadmin
AWS_SECRET_ACCESS_KEY=minioadmin123

# S3 Base URL for public access
# For MinIO: http://localhost:9000/blog-uploads
# For AWS S3: leave empty (auto-generated)
S3_BASE_URL=http://localhost:9000/blog-uploads

# Force path style for S3 (required for MinIO)
S3_FORCE_PATH_STYLE=true

# Production Example for AWS S3:
# STORAGE_DRIVER=s3
# AWS_REGION=us-west-2
# S3_BUCKET_NAME=your-production-bucket
# AWS_ACCESS_KEY_ID=your-aws-access-key
# AWS_SECRET_ACCESS_KEY=your-aws-secret-key
# S3_BASE_URL=
# S3_FORCE_PATH_STYLE=false

# Security Configuration
ALLOWED_ORIGINS=http://localhost:3000,http://localhost:5173,http://localhost:8080
RATE_LIMIT_AUTH=10
RATE_LIMIT_API=60
RATE_LIMIT_DOCS=30

# MySQL Root Password (for docker-compose)
MYSQL_ROOT_PASSWORD=rootpassword

# CORS Configuration
CORS_MAX_AGE=12h
CORS_ALLOW_CREDENTIALS=true

# API Configuration
API_VERSION=1.0.0
API_TITLE=BlogCMS API
API_DESCRIPTION=A comprehensive blog management system with JWT authentication and security features
