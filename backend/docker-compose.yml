version: '3.8'

services:
  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: blogcms_mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: blogcms
      MYSQL_USER: bloguser
      MYSQL_PASSWORD: blogpassword
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./database_schema.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - blogcms_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  # Backend API
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: blogcms_backend
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      - PORT=8080
      - ENVIRONMENT=development
      - DATABASE_URL=mysql://bloguser:blogpassword@mysql:3306/blogcms?charset=utf8mb4&parseTime=True&loc=Local
      - JWT_SECRET=your-super-secret-jwt-key-here-change-in-production
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - blogcms_network
    volumes:
      - .:/app
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # phpMyAdmin (optional, for database management)
  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    container_name: blogcms_phpmyadmin
    restart: unless-stopped
    ports:
      - "8081:80"
    environment:
      PMA_HOST: mysql
      PMA_PORT: 3306
      PMA_USER: bloguser
      PMA_PASSWORD: blogpassword
      MYSQL_ROOT_PASSWORD: rootpassword
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - blogcms_network

volumes:
  mysql_data:
    driver: local

networks:
  blogcms_network:
    driver: bridge
