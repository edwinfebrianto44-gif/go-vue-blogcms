version: '3.8'

services:
  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: blogcms_mysql_prod
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    ports:
      - "127.0.0.1:3306:3306"  # Bind hanya ke localhost untuk keamanan
    volumes:
      - mysql_data:/var/lib/mysql
      - ./mysql/conf.d:/etc/mysql/conf.d:ro
      - ../backend/database_schema.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      - blogcms_network
    command: --default-authentication-plugin=mysql_native_password
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${MYSQL_ROOT_PASSWORD}"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  # Backend Golang API
  backend:
    build:
      context: ../
      dockerfile: deployment/Dockerfile
    container_name: blogcms_backend_prod
    restart: unless-stopped
    ports:
      - "127.0.0.1:8080:8080"  # Bind hanya ke localhost, nginx akan proxy
    environment:
      - PORT=8080
      - ENVIRONMENT=production
      - DATABASE_URL=mysql://${DB_USER}:${DB_PASSWORD}@mysql:3306/${DB_NAME}?charset=utf8mb4&parseTime=True&loc=Local
      - JWT_SECRET=${JWT_SECRET}
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - blogcms_network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.1'
          memory: 128M

  # Adminer untuk Database Management
  adminer:
    image: adminer:4.8.1
    container_name: blogcms_adminer_prod
    restart: unless-stopped
    ports:
      - "127.0.0.1:8081:8080"  # Bind hanya ke localhost
    environment:
      ADMINER_DEFAULT_SERVER: mysql
      ADMINER_DESIGN: pepa-linha-dark
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - blogcms_network

  # Nginx Reverse Proxy
  nginx:
    image: nginx:1.25-alpine
    container_name: blogcms_nginx_prod
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - ./nginx/logs:/var/log/nginx
    depends_on:
      - backend
    networks:
      - blogcms_network
    command: nginx -g 'daemon off;'

volumes:
  mysql_data:
    driver: local

networks:
  blogcms_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
